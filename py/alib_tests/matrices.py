from linhomy.matrices import F_from_IC
from linhomy.matrices import IC_from_F

def lists_from_matrix(matrix):

    return [
        list(map(int, row))
        for row in matrix
    ]

def lists_from_cube(matrix):

    return [
        list(map(int, row))
        for tmp in matrix
        for row in tmp
    ]


lists_from_matrix(F_from_IC[4]) == [
    [1, 5, 10, 10, 30],
    [1, 6, 13, 13, 40],
    [1, 7, 15, 14, 45],
    [1, 8, 16, 14, 48],
    [1, 10, 21, 18, 64],
]

lists_from_matrix(IC_from_F[4]) == [
    [16, -10, 0, -15, 10],
    [-5, 4, -2, 7, -4],
    [2, -4, 4, -3, 1],
    [-4, 3, 0, 4, -3],
    [1, 0, -1, -1, 1],
]


from linhomy.matrices import IC_from_CD_helper

list(IC_from_CD_helper(b'')) == [
    b'',
]

list(IC_from_CD_helper(b'\x01')) == [
    b'\x01',
]

list(IC_from_CD_helper(b'\x02')) == [
    b'\x01\x01',
    b'\x02',
]

list(IC_from_CD_helper(b'\x02\x01\x02\x02')) == [
    b'\x01\x01\x01\x01\x01\x01\x01',
    b'\x01\x01\x01\x01\x01\x02',
    b'\x01\x01\x01\x02\x01\x01',
    b'\x01\x01\x01\x02\x02',
    b'\x02\x01\x01\x01\x01\x01',
    b'\x02\x01\x01\x01\x02',
    b'\x02\x01\x02\x01\x01',
    b'\x02\x01\x02\x02',
]


from linhomy.matrices import IC_from_CD
from linhomy.matrices import CD_from_IC

lists_from_matrix(IC_from_CD[4]) == [
    [1, 0, 0, 0, 0],
    [1, 1, 0, 0, 0],
    [1, 0, 1, 0, 0],
    [1, 0, 0, 1, 0],
    [1, 1, 0, 1, 1],
]

lists_from_matrix(CD_from_IC[4]) == [
    [1, 0, 0, 0, 0],
    [-1, 1, 0, 0, 0],
    [-1, 0, 1, 0, 0],
    [-1, 0, 0, 1, 0],
    [1, -1, 0, -1, 1],
]


from linhomy.matrices import g_from_CD
from linhomy.matrices import CD_from_g

lists_from_matrix(g_from_CD[4]) == [
    [1, 0, 0, 0, 0],
    [0, 1, 1, 1, 0],
    [0, 0, 1, 1, 0],
    [0, 0, 0, 1, 0],
    [0, 0, 0, 0, 1],
]

lists_from_matrix(CD_from_g[4]) == [
    [1, 0, 0, 0, 0],
    [0, 1, -1, 0, 0],
    [0, 0, 1, -1, 0],
    [0, 0, 0, 1, 0],
    [0, 0, 0, 0, 1],
]


from linhomy.matrices import J_from_IC

sorted(J_from_IC) == [
    (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9),
    (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8),
    (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7),
    (3, 0), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6),
    (4, 0), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5),
    (5, 0), (5, 1), (5, 2), (5, 3), (5, 4),
    (6, 0), (6, 1), (6, 2), (6, 3),
    (7, 0), (7, 1), (7, 2),
    (8, 0), (8, 1),
    (9, 0),
]

lists_from_cube(J_from_IC[2, 2]) == [
    [250, 6, -53, -54, 27, 0, -32, 21],
    [344, 2, -67, -77, 37, 2, -43, 28],
    [344, 2, -67, -77, 37, 2, -43, 28],
    [474, -8, -82, -109, 50, 5, -57, 37],
]

lists_from_cube(J_from_IC[2, 3]) == [
    [-6404, 3114, -1318, 2710, -752, -1231, 342, -42, 1965, -779, 236, -479, 146],
    [-8686, 4221, -1800, 3675, -1014, -1677, 466, -59, 2665, -1055, 323, -647, 196],
    [-9869, 4811, -2058, 4180, -1151, -1918, 527, -64, 3026, -1194, 363, -731, 222],
    [-8686, 4221, -1800, 3675, -1014, -1677, 466, -59, 2665, -1055, 323, -647, 196],
    [-11787, 5723, -2459, 4987, -1368, -2287, 637, -84, 3616, -1430, 443, -874, 263],
    [-13397, 6526, -2816, 5675, -1552, -2616, 719, -91, 4107, -1618, 498, -988, 298],
]

len(lists_from_cube(J_from_IC[4, 5])) == 5 * 8


from linhomy.matrices import J_from_CD

sorted(J_from_CD) == sorted(J_from_IC)

lists_from_cube(J_from_CD[2, 2]) == [
    [250, -244, -303, -304, 325, -250, 212, 324],
    [594, -586, -714, -725, 781, -592, 509, 761],
    [594, -586, -714, -725, 781, -592, 509, 761],
    [1412, -1410, -1681, -1729, 1878, -1403, 1226, 1786],
]

lists_from_cube(J_from_CD[2, 3]) == [
    [-6404, 9518, 5086, 9114, -12980, 5173, -7945, -3897, 8369, -12262, -6815, -11558, 16349],
    [-15090, 22425, 11972, 21475, -30576, 12182, -18709, -9165, 19720, -28889, -16043, -27231, 38508],
    [-16273, 24198, 12897, 23163, -32991, 13124, -20180, -9854, 21264, -31162, -17289, -29364, 41533],
    [-15090, 22425, 11972, 21475, -30576, 12182, -18709, -9165, 19720, -28889, -16043, -27231, 38508],
    [-35563, 52842, 28186, 50610, -72037, 28691, -44059, -21558, 46474, -68072, -37772, -64168, 90715],
    [-38356, 57028, 30364, 54596, -77737, 30914, -47532, -23178, 50119, -73437, -40707, -69204, 97853],
]
